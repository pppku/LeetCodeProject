/* question

给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/3sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution
 
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {

        vector<vector<int>> result;
        
        int now, low, high; 

        if(nums.size() >= 3)
            sort(nums.begin(), nums.end());
        else 
            return result;



        for(now = 0; now < nums.size() - 2; ++now)
        {
            low = now + 1;
            high = nums.size() - 1;
            if(nums[now] > 0) break;
            if(now > 0 && nums[now] == nums[now - 1]) continue;

            while(low < high)
            {
                if(nums[now] + nums[low] + nums[high] < 0)
                {
                    low++;
                }
                else if(nums[now] + nums[low] + nums[high] > 0)
                {
                    high--;
                }
                else
                {
                    vector<int> temp = {nums[now], nums[low], nums[high]};
                    result.push_back(temp);
                    low++;
                    while(low < high && nums[low] == nums[low - 1])
                        low++;
                }
            }
        }

        return result;
    }
};

*/
