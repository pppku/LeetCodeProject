/* question

给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。

例如，给定数组 nums = [-1，2，1，-4], 和 target = 1.

与 target 最接近的三个数的和为 2. (-1 + 2 + 1 = 2).

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/3sum-closest
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int sum = 0;
        int distance = 9999;
        int result = 0;
        int size = nums.size();
        int now, low, high;

        if(size < 4)
        {
            for(int i = 0; i < size; ++i)
                sum += nums[i];
            return sum;
        }

        else
        {
            sort(nums.begin(), nums.end());
        }

        for(now = 0; now < size - 2; ++now)
        {
            low = now + 1;
            high = size - 1;

            while(low < high)
            {
                sum = nums[now] + nums[low] + nums[high];
                if(abs(sum - target) < distance)
                {
                    distance = abs(sum - target);
                    result = sum;
                }
                if(sum > target) high--;
                else low++;
            }
        }

        return result;
    }
};

*/
