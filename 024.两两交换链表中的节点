/* question

给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。

你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

 

示例:

给定 1->2->3->4, 你应该返回 2->1->4->3.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/swap-nodes-in-pairs
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/
 
/* solution1

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode* now = head;
        ListNode* nownext = NULL;
        if(now != NULL)
            nownext = now->next;
        int temp;
        
        while(now && nownext)
        {
            temp = now->val;
            now->val = nownext->val;
            nownext->val = temp;
            
            if(nownext->next != NULL)
            {
                now = nownext->next;
                if(now ->next != NULL)
                    nownext = now->next;
                else
                    nownext = NULL;
            }
                
            else 
                now = NULL;
            
        }
        
        return head;
    }
};

*/

/* solution2 递归

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head || !head->next) return head;

        ListNode* nxt = head->next;
        head->next = swapPairs(nxt->next);
        nxt->next = head;
        
        return nxt;
    }
};

*/
