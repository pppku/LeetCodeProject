/* question

给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。

返回被除数 dividend 除以除数 divisor 得到的商。

示例 1:

输入: dividend = 10, divisor = 3
输出: 3
示例 2:

输入: dividend = 7, divisor = -3
输出: -2
说明:

被除数和除数均为 32 位有符号整数。
除数不为 0。
假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−231,  231 − 1]。本题中，如果除法结果溢出，则返回 231 − 1。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/divide-two-integers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution

class Solution {
public:
    int divide(int dividend, int divisor) {

        if(dividend == 0) return 0;
        else if(divisor == 1) return dividend;
        else if(divisor == -1)
        {
            if(dividend > INT_MIN) return -dividend;
            else return INT_MAX;
        }

        int op;
        if (dividend > 0 && divisor > 0)
            op = 1;
        else if(dividend < 0 && divisor < 0)
            op = 1;
        else
            op = -1;

        double a = dividend;
        double b = divisor;
        a = a > 0 ? a : -a;
        b = b > 0 ? b : -b;

        int result = 0;
        div(a, b, result);


        return result * op;

    }

    void div(double a, double b, int& result)
    {
        while(a >= b)
        {
            if(a >= b * 100000000)
            {
                a -= b * 100000000;
                result += 100000000;
            }

            else if(a >= b * 10000000)
            {
                a -= b * 10000000;
                result += 10000000;
            }
            else if(a >= b * 1000000)
            {
                a -= b * 1000000;
                result += 1000000;
            }
            else if(a >= b * 100000)
            {
                a -= b * 100000;
                result += 100000;
            }
            else if(a >= b * 10000)
            {
                a -= b * 10000;
                result += 10000;
            }
            else if(a >= b * 1000)
            {
                a -= b * 1000;
                result += 1000;
            }
            else if(a >= b * 100)
            {
                a -= b * 100;
                result += 100;
            }
            else if(a >= b * 10)
            {
                a -= b * 10;
                result += 10;
            }
            else if(a >= b)
            {
                a -= b;
                result++;
            }
        }
    }
};

*/


/* improve

    int div(double a, double b){  // 似乎精髓和难点就在于下面这几句
    if(a<b) return 0;
    double count = 1;
    double tb = b; // 在后面的代码中不更新b
    while((tb+tb)<=a){
        count = count + count; // 最小解翻倍
        tb = tb+tb; // 当前测试的值也翻倍
    }
    return count + div(a-tb,b);
    }
    
    
   // 算出当前被除数能减去除数*2^n 将数值传递给下一个递归体
   
   

*/
