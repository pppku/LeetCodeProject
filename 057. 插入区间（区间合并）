/* question

给出一个无重叠的 ，按照区间起始端点排序的区间列表。

在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。

 

示例 1：

输入：intervals = [[1,3],[6,9]], newInterval = [2,5]
输出：[[1,5],[6,9]]
示例 2：

输入：intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]
输出：[[1,2],[3,10],[12,16]]
解释：这是因为新的区间 [4,8] 与 [3,5],[6,7],[8,10] 重叠。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/insert-interval
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int left = newInterval[0];
        int right = newInterval[1];

        vector<vector<int>> res;
        int place = 0;

        for(auto interval: intervals)
        {
            // 区间在左侧无交集
            if(interval[0] > right)
            {
                // 经过需要处理的区间，且new没有放置，则插入new区间
                if(!place)
                {
                    res.push_back({left, right});
                    place = 1;
                }
                res.push_back(interval);
            }

            // 区间在右侧无交集
            else if(interval[1] < left)
            {
                res.push_back(interval);
            }

            // 有交集
            else
            {
                left = min(left, interval[0]);
                right = max(right, interval[1]);
            }

        }

        // 处理到最后也没有处理new的情况
        if(!place)
        {
            res.push_back({left, right});
        }


        return res;
    }
};


*/
