/* question

给定一个二叉树，返回它的中序 遍历。

示例:

输入: [1,null,2,3]
   1
    \
     2
    /
   3

输出: [1,3,2]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/binary-tree-inorder-traversal
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


/* solution

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        stack<TreeNode*> mystack;
        vector<int> res;
        if(root == NULL) return res;

        mystack.push(root);

        while(!mystack.empty())
        {
            TreeNode* tem = mystack.top();
            if(tem->left != NULL)
            {
                mystack.push(tem->left);
                // 左子树必须置空 否则会无限循环
                tem->left = NULL;
                continue;
            }

            res.push_back(tem->val);
            mystack.pop();
            if(tem->right != NULL)
            {
                mystack.push(tem->right);
            }

        }

        return res;
    }
};

*/
