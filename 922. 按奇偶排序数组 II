/* question

给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。

对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。

你可以返回任何满足上述条件的数组作为答案。

 

示例：

输入：[4,2,5,7]
输出：[4,5,2,7]
解释：[4,7,2,5]，[2,5,4,7]，[2,7,4,5] 也会被接受。
 

提示：

2 <= A.length <= 20000
A.length % 2 == 0
0 <= A[i] <= 1000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sort-array-by-parity-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


/* solution

class Solution {
public:
    vector<int> sortArrayByParityII(vector<int>& A) {
        int ji = 1;
        int ou = 0;

        while(ji < A.size() && ou < A.size())
        {
            // 找到一个不符合条件的偶数位
            while(ou < A.size() && A[ou] % 2 == 0) ou += 2;

            // 找到一个不符合条件的奇数位
            while(ji < A.size() && A[ji] % 2 == 1) ji += 2;

            if(ji >= A.size() || ou >= A.size()) break;

            swap(A[ji], A[ou]);
            ji += 2;
            ou += 2;
        }


        return A;
    }
};

*/
